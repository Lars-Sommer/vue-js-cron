import{_ as r,r as a,o as u,c as k,a as t,w as e,b as n,d as s,e as p}from"./app.99fe6d08.js";const d={},v=n("h1",{id:"cron-core",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cron-core","aria-hidden":"true"},"#"),s(" cron-core")],-1),m=n("h2",{id:"props",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#props","aria-hidden":"true"},"#"),s(" Props")],-1),b=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"items"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"defaultItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("locale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("minuteItems "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"items"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"defaultItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("locale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("hourItems "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'day'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"items"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"defaultItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("locale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("dayItems "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'month'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"items"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"defaultItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("locale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("monthItems "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'dayOfWeek'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"items"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"defaultItems"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("locale"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("dayOfWeekItems "),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token punctuation"},"["),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'day'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'week'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'dayOfWeek'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'month'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'day'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'dayOfWeek'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"id"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'year'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token literal-property property"},"value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'month'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'day'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'dayOfWeek'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'hour'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'minute'"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g={href:"https://github.com/abichinger/vue-js-cron/blob/next/core/src/locale/en.js",target:"_blank",rel:"noopener noreferrer"},h=p(`<h3 id="types" tabindex="-1"><a class="header-anchor" href="#types" aria-hidden="true">#</a> Types</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Field</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token builtin">string</span>
        alt<span class="token operator">:</span> <span class="token builtin">string</span>
        value<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Period</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// strings are nested by periodId -&gt; fieldId -&gt; cronType -&gt; position</span>
<span class="token comment">// &#39;*&#39; can be used as a wildcard</span>

<span class="token comment">// cronType = empty | value | range | everyX | *</span>
<span class="token comment">// position = prefix | text | suffix | *</span>

<span class="token keyword">type</span> <span class="token class-name">Locale</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;{periodId}&#39;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;{position}&#39;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// prefix/text/suffix of period selection </span>
        <span class="token string">&#39;{fieldId}&#39;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;{cronType}&#39;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;{positon}&#39;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// prefix/text/suffix of field</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2>`,5),f=n("h2",{id:"slots",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#slots","aria-hidden":"true"},"#"),s(" Slots")],-1),_=p(`<h3 id="types-1" tabindex="-1"><a class="header-anchor" href="#types-1" aria-hidden="true">#</a> Types</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CronState</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    fields<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
        attrs<span class="token operator">:</span> <span class="token punctuation">{</span> 
            modelValue<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token comment">//array item values</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        events<span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;update:model-value&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
        items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span> <span class="token comment">//see type Field</span>
        cron<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
        selectedStr<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
        prefix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
        suffix<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    period<span class="token operator">:</span> <span class="token punctuation">{</span>
        attrs<span class="token operator">:</span> <span class="token punctuation">{</span> 
            modelValue<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">//selected period id</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        events<span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;update:model-value&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>periodId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        items<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Period<span class="token operator">&gt;</span><span class="token punctuation">,</span>
        prefix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
        suffix<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    error<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function x(I,w){const o=a("ExternalLinkIcon"),c=a("api-core-props"),l=a("api-core-events"),i=a("api-core-slots");return u(),k("div",null,[v,m,t(c,null,{r1c2:e(()=>[b]),r2c2:e(()=>[y]),r4c2:e(()=>[n("p",null,[n("a",g,[s("en.js"),t(o)])])]),_:1}),h,t(l),f,t(i),_])}const A=r(d,[["render",x],["__file","core.html.vue"]]);export{A as default};
